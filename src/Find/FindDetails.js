import React from 'react';import {    Text,    View,    StyleSheet,    Image,    TouchableOpacity,    Animated,    ScrollView, StatusBar, WebView, AsyncStorage,} from 'react-native';import Utils from "../Component/Utils";import {Loading} from "../Component/Loading";export default class FindDetails extends React.Component {    static navigationOptions = ({navigation}) => ({        headerTitle: navigation.state.params.name,        headerTintColor: '#4e5d6f',        headerTitleStyle:{            flex:1,            textAlign: 'center'        },        headerRight: <View />,    })    constructor(props) {        super(props);        this.state = {            data: {},            language: {},        }    }    componentDidMount () {        this.LoadAsync(this.props.navigation.state.params.newId);    }    async LoadAsync (record) {        try {            this.setState({                language: this.props.navigation.state.params.language            });            Loading.show(this.state.language.PrivacyPolicy_Loading_show);            let results = await AsyncStorage.getItem('lang');            let formData = new FormData();            formData.append("newId", record);            formData.append("lang", results);            let result = await Utils.loadAsyncData(Utils.size.url + '/api/Property/getDetail', formData);            if (result.result.new_time) {                result.result.new_time = Utils.formatTs(result.result.new_time);            }            this.setState({                data: result.result            })            Loading.hidden();        }        catch (e) {            console.log(e);        }    }    render() {        return (            <View style={styles.content}>                <ScrollView                    showsVerticalScrollIndicator={true}>                    <View style={styles.BannerDetails}>                        <Text style={styles.BannerDetailsTitle}>                            {this.state.data.new_title}                        </Text>                        <View style={styles.BannerDetailsMain}>                            {/*<Text style={styles.BannerDetailsOn}>*/}                                {/*阅读量： 22*/}                            {/*</Text>*/}                            <Text>                            </Text>                            <Text style={styles.BannerDetailsOn}>                                { this.state.data.new_time }                            </Text>                        </View>                        <View style={styles.BannerDetailsMainDeta}>                            <Image source={{uri: this.state.data.new_img}} style={styles.BannerDetailsMainDetaIm}/>                            {/*<Text style={styles.BannerDetailsMainDetaText}>*/}                                <WebView bounces={false}                                         originWhitelist={['*']}                                         scalesPageToFit={Utils.size.os === 'ios' ? false : true}                                         source={{html: this.state.data.new_content,  baseUrl: ''}}                                         style={{width: Utils.size.width, height: Utils.size.height}}>                                </WebView>                            {/*</Text>*/}                        </View>                    </View>                </ScrollView>            </View>        );    }}const styles = StyleSheet.create({    content: {        flex: 1,    },    messageHeader: {        height: (Utils.size.os === 'ios') ? 64 : 42,        flexDirection: 'row',        alignItems: 'center',        justifyContent: 'space-between',        paddingLeft: 10,        borderBottomWidth: 1,        borderBottomColor: '#ececec',        paddingRight: 10,        paddingTop: ( Utils.size.os === 'ios') ? 20 : 0,        backgroundColor: '#fff',    },    headerRightText: {        color: '#36b9c8',        fontSize: Utils.setSpText(14),    },    swipoutLineBgColor: {        backgroundColor: '#fff',    },    messageHeaderTitle: {        textAlign: 'center',        width: Utils.size.width - 120,        color: '#4e5d6f',        fontWeight: 'bold',        fontSize: Utils.setSpText(15),    },    messageHeaderBack: {        width: 20,        height: 20,    },    headerLeft: {        width: 50,    },    headerRight: {        width: 50,        flexDirection:'row-reverse',    },    // 内容    BannerDetails: {        paddingLeft: 10,        paddingRight: 10,        paddingTop: 20,    },    BannerDetailsTitle: {        fontSize: Utils.setSpText(16),        fontWeight: 'bold'    },    BannerDetailsMain: {        flexDirection: 'row',        paddingTop: 20,    },    BannerDetailsOn: {        fontSize: Utils.setSpText(12),    },    BannerDetailsMainDeta: {        paddingTop: 30,    },    BannerDetailsMainDetaIm: {        width: Utils.size.width - 20,        height: 200,    },    BannerDetailsMainDetaText: {        lineHeight: 20,        fontSize: Utils.setSpText(15),    }});